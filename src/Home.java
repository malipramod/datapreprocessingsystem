
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Pramod
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DBTableResult = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        DBTable = new javax.swing.JTable();
        btnDataProvider = new javax.swing.JButton();
        btnIdentifyOutlier = new javax.swing.JButton();
        btnSmoothData = new javax.swing.JButton();
        btnNormalization = new javax.swing.JButton();
        btnViewLog = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnFillMissingValue1 = new javax.swing.JButton();
        lblOutlierMsg2 = new javax.swing.JLabel();
        btnDataProvider1 = new javax.swing.JButton();
        cmbColumnName = new javax.swing.JComboBox();
        lblOutlierMsg = new javax.swing.JLabel();
        lblOutlierMsg1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DBTableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DBTableResult.setToolTipText("Resulted Table");
        jScrollPane1.setViewportView(DBTableResult);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, 110));

        DBTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DBTable.setToolTipText("Selected Table");
        jScrollPane2.setViewportView(DBTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 110));

        btnDataProvider.setText("Choose SQL Server Provider");
        btnDataProvider.setToolTipText("Select SQL Server");
        btnDataProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataProviderActionPerformed(evt);
            }
        });
        getContentPane().add(btnDataProvider, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 190, -1));

        btnIdentifyOutlier.setText("Identify Outlier");
        btnIdentifyOutlier.setToolTipText("Outlier using maximum likyhood");
        btnIdentifyOutlier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIdentifyOutlierActionPerformed(evt);
            }
        });
        getContentPane().add(btnIdentifyOutlier, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 150, -1));

        btnSmoothData.setText("Smooth Data");
        btnSmoothData.setToolTipText("Smoothing by mean");
        btnSmoothData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSmoothDataActionPerformed(evt);
            }
        });
        getContentPane().add(btnSmoothData, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 150, -1));

        btnNormalization.setText("Normalization");
        btnNormalization.setToolTipText("Normalization using min-max");
        btnNormalization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNormalizationActionPerformed(evt);
            }
        });
        getContentPane().add(btnNormalization, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 150, -1));

        btnViewLog.setText("View Log");
        btnViewLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewLogActionPerformed(evt);
            }
        });
        getContentPane().add(btnViewLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 103, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Resulted Table");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 103, 25));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Database Table");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 103, 25));

        btnFillMissingValue1.setText("Fill Missing Value");
        btnFillMissingValue1.setToolTipText("Fill missing values by midrange");
        btnFillMissingValue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFillMissingValue1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnFillMissingValue1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 150, -1));

        lblOutlierMsg2.setText("jLabel3");
        getContentPane().add(lblOutlierMsg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, 250, -1));

        btnDataProvider1.setText("Choose MySQL Provider");
        btnDataProvider1.setToolTipText("Select My SQL Server");
        btnDataProvider1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataProvider1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnDataProvider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 200, -1));

        getContentPane().add(cmbColumnName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 120, -1));

        lblOutlierMsg.setText("jLabel4");
        getContentPane().add(lblOutlierMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 470, -1, -1));

        lblOutlierMsg1.setText("jLabel4");
        getContentPane().add(lblOutlierMsg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, -1, -1));

        jLabel3.setText("Select Column Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, -1));

        jMenuBar1.setToolTipText("");
        jMenuBar1.setFont(new java.awt.Font("Segoe WP Light", 0, 14)); // NOI18N
        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        StateManagerClass stm = new StateManagerClass();
        //  String da=stm.getDatabaseName();
        String[] rArray = new String[100];
        int i = 1;
        DataProviderClass dp = new DataProviderClass();
        if (stm.getDatabaseName().equals(null)) {
            JOptionPane.showMessageDialog(this, "No Database Selected");
        } else {
            bindTable();
            rArray = dp.bindColumnCombo(stm.getMySQLHost(), stm.getDatabaseName(), stm.getTableName());
            try {
                cmbColumnName.removeAllItems();
                while (i <= rArray.length) {
                    if (rArray[i] == null) {
                       
                    } else {
                        cmbColumnName.addItem(rArray[i]);
                    }
                    i++;
                }
            } catch (ArrayIndexOutOfBoundsException ex) {

            }

        }
        lblOutlierMsg2.setText("User Logged In :" + stm.getUserName() + "/" + stm.getDatabaseName() + "/" + stm.getTableName());


    }//GEN-LAST:event_formWindowGainedFocus

    private void btnDataProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataProviderActionPerformed
        lblOutlierMsg.setVisible(false);
        lblOutlierMsg1.setVisible(false);
        setVisible(false);
        new DataProviderSelector().setVisible(true);
    }//GEN-LAST:event_btnDataProviderActionPerformed

    private void btnIdentifyOutlierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIdentifyOutlierActionPerformed
        try {
            DataCleaningClass objClean = new DataCleaningClass();
            StateManagerClass stmObj = new StateManagerClass();
            objClean.identifyOutliers(stmObj.getMySQLHost(), stmObj.getMySQLUserName(), stmObj.getMySQLPassword(), stmObj.getDatabaseName(), stmObj.getTableName(), cmbColumnName.getSelectedItem().toString());
            bindTable2();
            lblOutlierMsg.setVisible(true);
            lblOutlierMsg1.setVisible(true);
            lblOutlierMsg.setText("1:Present");
            lblOutlierMsg1.setText("0:Not Present");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnIdentifyOutlierActionPerformed

    private void btnSmoothDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSmoothDataActionPerformed
        try {
            DataCleaningClass objClean = new DataCleaningClass();
            StateManagerClass stmObj = new StateManagerClass();
            objClean.smoothNoisyData(stmObj.getMySQLHost(), stmObj.getMySQLUserName(), stmObj.getMySQLUserName(), stmObj.getDatabaseName(), stmObj.getTableName(), cmbColumnName.getSelectedItem().toString());
            bindTable2();
             lblOutlierMsg.setVisible(false);
         lblOutlierMsg1.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSmoothDataActionPerformed

    private void btnNormalizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNormalizationActionPerformed
        try {
            DataTransformationClass objClean = new DataTransformationClass();
            StateManagerClass stmObj = new StateManagerClass();
            objClean.normalization(stmObj.getMySQLHost(), stmObj.getMySQLUserName(), stmObj.getMySQLPassword(), stmObj.getDatabaseName(), stmObj.getTableName(), cmbColumnName.getSelectedItem().toString());
            bindTable2();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnNormalizationActionPerformed

    private void btnFillMissingValue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFillMissingValue1ActionPerformed
        try {
            DataCleaningClass objClean = new DataCleaningClass();
            StateManagerClass stmObj = new StateManagerClass();
            objClean.fillMissingValue(stmObj.getMySQLHost(), stmObj.getMySQLUserName(), stmObj.getMySQLPassword(), stmObj.getDatabaseName(), stmObj.getTableName(), cmbColumnName.getSelectedItem().toString());
            bindTable2();
            lblOutlierMsg.setVisible(false);
            lblOutlierMsg1.setVisible(false);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No database Selected");
        }
    }//GEN-LAST:event_btnFillMissingValue1ActionPerformed

    private void btnViewLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewLogActionPerformed
         lblOutlierMsg.setVisible(false);
         lblOutlierMsg1.setVisible(false);
        setVisible(false);
        new viewLog().setVisible(true);
    }//GEN-LAST:event_btnViewLogActionPerformed

    private void btnDataProvider1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataProvider1ActionPerformed
        lblOutlierMsg.setVisible(false);
        lblOutlierMsg1.setVisible(false);
        setVisible(false);
        new MySQLDatabaseSelector().setVisible(true);
    }//GEN-LAST:event_btnDataProvider1ActionPerformed

    public void bindTable2() {
        DataProviderClass dp = new DataProviderClass();
        StateManagerClass objState = new StateManagerClass();
        String databaseName, tableName, host;

        ResultSet result;
        if (objState.getDatabaseType() == 1) {
            databaseName = objState.getDatabaseName();
            tableName = objState.getNewTableName();
            host = objState.getMySQLHost();
            try {
                result = dp.bindTable2(databaseName, tableName, host, cmbColumnName.getSelectedItem().toString());
                DBTableResult.setModel(DbUtils.resultSetToTableModel(result));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        } else if (objState.getDatabaseType() == 5) {
            databaseName = objState.getDatabaseName();
            tableName = objState.getTableName();
            host = objState.getSQLServerHost();
            try {
                result = dp.bindTable(databaseName, tableName, host);
                DBTable.setModel(DbUtils.resultSetToTableModel(result));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Problem While selecting database");
        }

    }

    public void bindTable() {
        DataProviderClass dp = new DataProviderClass();
        StateManagerClass objState = new StateManagerClass();
        String databaseName, tableName, host;

        ResultSet result;
        if (objState.getDatabaseType() == 1) {
            databaseName = objState.getDatabaseName();
            tableName = objState.getTableName();
            host = objState.getMySQLHost();
            try {
                result = dp.bindTable(databaseName, tableName, host);
                DBTable.setModel(DbUtils.resultSetToTableModel(result));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        } else if (objState.getDatabaseType() == 5) {
            databaseName = objState.getDatabaseName();
            tableName = objState.getTableName();
            host = objState.getSQLServerHost();
            try {
                result = dp.bindTable(databaseName, tableName, host);
                DBTable.setModel(DbUtils.resultSetToTableModel(result));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Problem While selecting database");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Home().setVisible(true);
            }
        });

        // Home obj=new Home();
        //  obj.bindTable();
//        JOptionPane.showMessageDialog(null,objState.tableName+" "+objState.databaseName);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DBTable;
    private javax.swing.JTable DBTableResult;
    private javax.swing.JButton btnDataProvider;
    private javax.swing.JButton btnDataProvider1;
    private javax.swing.JButton btnFillMissingValue1;
    private javax.swing.JButton btnIdentifyOutlier;
    private javax.swing.JButton btnNormalization;
    private javax.swing.JButton btnSmoothData;
    private javax.swing.JButton btnViewLog;
    private javax.swing.JComboBox cmbColumnName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblOutlierMsg;
    private javax.swing.JLabel lblOutlierMsg1;
    private javax.swing.JLabel lblOutlierMsg2;
    // End of variables declaration//GEN-END:variables
}
